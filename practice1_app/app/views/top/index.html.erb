<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Backbone.js Todos</title>
  <link rel="stylesheet" href="css/todos.css"/>
</head>

<body>
  
  <div id="todoapp">
    
    <header>
      <h1>Todos</h1>
      <input id="new-todo" type="text" placeholder="What needs to be done?">
    </header>

    <section id="main">
      <input id="toggle-all" type="checkbox">
      <label for="toggle-all">Mark all as complete</label>
      <ul id="todo-list"></ul>
    </section>

    <footer>
      <a id="clear-completed">Clear completed</a>
      <div id="todo-count"></div>
    </footer>
    
  </div>
  
  <div id="instructions">
    Double-click to edit a todo.
  </div>
  
  <div id="credits">
    Original created by
    <br />
    <a href="http://jgn.me/">J&eacute;r&ocirc;me Gravel-Niquet</a>.
    <br />Rewritten by: <a href="http://addyosmani.github.com/todomvc">TodoMVC</a>.
  </div>

  <script src="lib/json2.js"></script>
  <script src="lib/jquery-1.8.3.js"></script>
  <script src="lib/underscore-1.4.3.js"></script>
  <script src="lib/backbone-0.9.2.js"></script>
  <script src="lib/backbone-localstorage.js"></script>
  <%= javascript_include_tag "application" %>

  <!-- Templates -->

  <script type="text/template" id="item-template">
  </script>

  <script type="text/template" id="stats-template">
  </script>

  <!-- todos.js -->
  <script>
    $(document).ready(function() {
      // ここにコードを記載していきます。オリジナル版でのtodos.jsに相当します。
      
      var Todo = Backbone.Model.extend({
        defaults : {
          title : 'empty todo',
          done : false
        }
      });



      var TodoList = Backbone.Collection.extend({
        model : Todo,
        doneTodos : function(){
          return this.where({ done : true })
        },
        remainingTodos : function(){
          return this.where({ done : false });
        }
      });


      var AppView = Backbone.View.extend({
        statsTemplate : templates['stats'],
        events : {
          'keypress #new-todo' : function(e) {
            if(e.keyCode !== 13) return;
            if(this.$input.val() === '') return;

            this.collection.add({ title : this.$input.val() });
            this.$input.val('');
          },
          'click #clear-completed' : function() {
            _.each(this.collection.doneTodos(), function(todo){ todo.destroy() });
          },
          'click #toggle-all' : function() {
            var allDone = this.allDoneCheckbox.checked;
            this.collection.each(function(todo){ todo.set('done', allDone); });
          }
        },
        initialize : function() {
          this.allDoneCheckbox = this.$('#toggle-all')[0];
          this.$input = this.$('#new-todo');
          this.$main = this.$('#main');
          this.$footer = this.$('footer');
          this.collection.on('add', this.addOne, this);
          this.collection.on('all', this.render, this);
        },
        addOne : function(todo) {
          var todoView = new App.Views.TodoView({ model : todo });
          this.$('#todo-list').append(todoView.el);
        },
        render : function(todo) {
          var done = this.collection.doneTodos().length;
          var remaining = this.collection.remainingTodos().length;

          if(this.collection.length) {
            this.$main.show();
            this.$footer.show();
            this.$footer.html(this.statsTemplate({ done : done, remaining : remaining }));
          } else {
            this.$main.hide();
            this.$footer.hide();
          }

          this.allDoneCheckbox.checked = !remaining;
        }
      });

      var app = new AppView({
        el : '#todoapp',
        collection : new TodoList()
      });

    });
  </script>

  </body>
</html>
